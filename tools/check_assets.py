import pygame
import os
import sys

def check_assets():
    '''
    Checks if Pygame can load a sample image and a sample audio file.
    Prints 'Assets OK' on success, or an error message on failure.
    '''
    print("Initializing Pygame for asset check...")
    try:
        pygame.init() # This initializes all available pygame modules.
        print("Pygame basic initialization successful.")
    except pygame.error as e:
        print(f"ERROR: Pygame basic initialization failed: {e}")
        sys.exit(1)

    mixer_initialized = False
    try:
        pygame.mixer.init() # Initialize the mixer for sound specifically.
        mixer_initialized = True
        print("Pygame mixer initialized successfully.")
    except pygame.error as e:
        print(f"WARNING: pygame.mixer.init() failed: {e}. Sound checks will be skipped. Attempting to proceed with image checks.")
        # mixer_initialized remains False

    script_dir = os.path.dirname(os.path.abspath(__file__))
    project_root = os.path.dirname(script_dir) # Assumes tools/ is one level down from root

    sample_image_path = os.path.join(project_root, "assets", "gfx", "ui", "icons", "heart.png")
    sample_sound_path = os.path.join(project_root, "assets", "audio", "music", "outer_space_loop.ogg")
    placeholder_wav_path = os.path.join(project_root, "assets", "audio", "sfx", "laser", "laser01.wav")

    image_placeholder_ok = False
    real_sound_ok = False
    sound_placeholder_ok = False # Only relevant if mixer_initialized is True

    # --- Sample Image Check (1x1 PNG placeholder) ---
    print(f"Checking sample image (placeholder): {sample_image_path}")
    if not os.path.exists(sample_image_path):
        print(f"ERROR: Sample image file does not exist: {sample_image_path}")
    else:
        size = os.path.getsize(sample_image_path)
        # Valid 1x1 PNGs are small, e.g. 67 bytes for one generated by Pillow.
        # Allow a range, e.g., 50 to 200 bytes.
        if not (50 < size < 200):
            print(f"ERROR: Sample image '{sample_image_path}' (1x1 placeholder) has unexpected size: {size} bytes. Expected 50-200 bytes.")
        else:
            try:
                image = pygame.image.load(sample_image_path)
                if image.get_width() == 1 and image.get_height() == 1:
                    print(f"Sample image (1x1 placeholder) '{sample_image_path}' loaded successfully and has correct dimensions.")
                    image_placeholder_ok = True
                else:
                    print(f"ERROR: Sample image (placeholder) '{sample_image_path}' loaded but has unexpected dimensions: {image.get_width()}x{image.get_height()}. Expected 1x1.")
            except pygame.error as e:
                print(f"ERROR: Failed to load sample image (placeholder) '{sample_image_path}': {e}")

    if mixer_initialized:
        # --- Sample Sound Check (Real OGG) ---
        print(f"Checking sample sound (real): {sample_sound_path}")
        if not os.path.exists(sample_sound_path):
            print(f"ERROR: Sample sound file does not exist: {sample_sound_path}")
        else:
            size = os.path.getsize(sample_sound_path)
            # Expecting ~33KB for outer_space_loop.ogg
            if not (30000 < size < 40000):
                print(f"ERROR: Sample sound '{sample_sound_path}' has unexpected size: {size} bytes. Expected 30KB-40KB.")
            else:
                try:
                    sound = pygame.mixer.Sound(sample_sound_path)
                    print(f"Sample sound '{sample_sound_path}' loaded successfully.")
                    real_sound_ok = True
                except pygame.error as e:
                    print(f"ERROR: Failed to load sample sound '{sample_sound_path}': {e}")

        # --- Placeholder Sound Check (WAV, copy of OGG) ---
        print(f"Checking placeholder sound (WAV): {placeholder_wav_path}")
        if not os.path.exists(placeholder_wav_path):
            print(f"ERROR: Placeholder WAV file does not exist: {placeholder_wav_path}")
        else:
            size = os.path.getsize(placeholder_wav_path)
            # Expecting ~33KB as it's a copy of outer_space_loop.ogg
            if not (30000 < size < 40000):
                print(f"ERROR: Placeholder WAV '{placeholder_wav_path}' has unexpected size: {size} bytes. Expected 30KB-40KB.")
            else:
                try:
                    sound = pygame.mixer.Sound(placeholder_wav_path)
                    print(f"Placeholder WAV '{placeholder_wav_path}' loaded successfully.")
                    sound_placeholder_ok = True
                except pygame.error as e:
                    print(f"ERROR: Failed to load placeholder WAV '{placeholder_wav_path}': {e}")
    else:
        print("Skipping all sound checks as mixer failed to initialize.")

    pygame.quit()

    # --- Final Result ---
    if not mixer_initialized:
        if image_placeholder_ok:
            print("Assets OK (images only, audio system failed to initialize).")
            sys.exit(0)
        else:
            print("Asset check failed (images failed, audio system failed to initialize).")
            sys.exit(1)
    else: # Mixer was initialized
        if image_placeholder_ok and real_sound_ok and sound_placeholder_ok:
            print("Assets OK")
            sys.exit(0)
        else:
            print("Asset check failed. See error messages above for details.")
            sys.exit(1)

if __name__ == '__main__':
    check_assets()
