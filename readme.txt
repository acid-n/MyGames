## Об игре "Alien Invasion"

"Alien Invasion" — это классический 2D аркадный шутер, разработанный с использованием библиотеки Pygame. Игрок управляет космическим кораблем, расположенным в нижней части экрана, с основной целью отразить волны наступающих пришельцев и уничтожить их как можно больше.

**Ключевые механики игры:**

*   **Управление кораблем:** Игрок может перемещать свой корабль горизонтально (влево и вправо), уворачиваясь от вражеских атак и занимая выгодные позиции для стрельбы.
*   **Стрельба:** Корабль игрока способен выпускать снаряды для уничтожения пришельцев. Количество одновременно выпущенных снарядов ограничено.
*   **Флот пришельцев:** Пришельцы появляются в верхней части экрана и движутся организованным флотом. Достигнув края экрана, флот меняет направление и немного смещается вниз, приближаясь к кораблю игрока.
*   **Система подсчета очков:** За каждого сбитого пришельца начисляются очки. Ведется учет текущего счета и рекорда (high score).
*   **Уровни сложности:** С каждым новым уровнем игра усложняется: скорость движения пришельцев увеличивается, а также может расти стоимость пришельцев в очках.
*   **Жизни игрока и окончание игры:** Игроку дается ограниченное количество жизней (кораблей). При столкновении с пришельцем или если пришелец достигает нижней границы экрана, игрок теряет одну жизнь. Потеря всех жизней приводит к окончанию игры (Game Over), после чего можно начать игру заново.

Игра предоставляет динамичный и увлекательный игровой процесс, требующий от игрока реакции и тактического мышления для защиты Земли от инопланетного вторжения.

## Ключевые возможности и недавние доработки

Этот раздел описывает основные реализованные игровые механики и последние улучшения, внесенные в проект "Alien Invasion".

*   **Система состояний игры (Game State Machine):**
    Внедрена система состояний игры (Game State Machine), четко разделяющая логику главного меню (`STATE_MENU`), активного игрового процесса (`STATE_PLAYING`), паузы (`STATE_PAUSED`) и экрана окончания игры (`STATE_GAME_OVER`). Это улучшает структуру кода и позволяет более гибко управлять различными этапами игры.

*   **Главное меню:**
    Игра теперь запускается с главного меню, где игроку предлагается начать "Новую игру" или "Выход" из приложения. Меню также отображается после завершения игровой сессии. Кнопки в меню динамически подстраивают свой размер под текст.

*   **Функция Паузы:**
    Добавлена возможность поставить игру на паузу в любой момент активного игрового процесса нажатием клавиши 'P'. Повторное нажатие возобновляет игру. В режиме паузы на экране отображается сообщение "Пауза".

*   **Сохранение рекорда:**
    Рекорд (high score) теперь сохраняется между игровыми сессиями. Данные о рекорде хранятся в файле `highscore.json` в той же директории, где находится файл настроек игры (`settings.py`), позволяя игрокам отслеживать свои лучшие достижения.

*   **Бонус "Щит":**
    В игру добавлен первый бонус – "Щит". Элемент бонуса (небольшой синий квадрат) может случайным образом появиться после уничтожения пришельца и начинает падать вниз. При сборе этого бонуса кораблем, игрок получает временную неуязвимость на 5 секунд. Активный щит визуально отображается специальным синеватым контуром вокруг корабля, защищая его от столкновений.

*   **Исправление путей к ресурсам:**
    Устранена ошибка `FileNotFoundError`, которая могла возникать при запуске игры из директории, отличной от корневой. Пути к графическим ресурсам теперь формируются как абсолютные, что обеспечивает более стабильный запуск игры.

## Проведенный рефакторинг кода

В рамках улучшения кодовой базы проекта "Alien Invasion" был проведен комплексный рефакторинг. Основными целями этих изменений были повышение модульности, улучшение читаемости кода, упрощение его дальнейшей поддержки и расширения, а также повышение общей надежности и конфигурируемости игры.

**Основные направления рефакторинга:**

1.  **Структурные улучшения в основном игровом файле (`alien_invasion.py`):**
    *   Была проведена декомпозиция нескольких ключевых методов, таких как `_check_play_button()` и `_ship_hit()`. Логика запуска новой игры и обработки столкновения корабля была вынесена в отдельные, более мелкие и сфокусированные методы (`_start_new_game()`, `_reset_round_elements()`). Это уменьшило дублирование кода и сделало основной класс `AlienInvasion` более организованным.
    *   В обработку событий нажатия клавиш (`_check_keydown_events()`) добавлены проверки на активность игрового состояния (`self.stats.game_active`), чтобы действия игрока (движение, стрельба) обрабатывались только во время активной игры.

2.  **Централизация настроек и параметров (`settings.py`):**
    *   Большое количество "магических чисел" и жестко закодированных значений было вынесено в класс `Settings`. Это включает пути к изображениям (`ship_image_path`, `alien_image_path`), параметры расположения и внешнего вида элементов интерфейса (отступы, цвета, размеры шрифтов для счета и кнопки "Play"), а также игровые коэффициенты (скорость изменения сложности, длительность паузы после попадания в корабль, параметры расчета расположения флота пришельцев).
    *   Упрощено управление скоростями игровых объектов (корабля, пуль, пришельцев) за счет удаления промежуточных `_speed_factor` переменных и прямого изменения базовых скоростей.

3.  **Улучшения в классах игровых объектов:**
    *   Класс `Button` был расширен методом `is_clicked(mouse_pos)`, инкапсулирующим логику определения нажатия на кнопку.
    *   В классы `Ship` и `Alien` добавлена обработка ошибок (`try-except pygame.error`) при загрузке изображений. В случае невозможности загрузить изображение, игра теперь выводит информативное сообщение об ошибке и корректно завершает работу, вместо аварийного падения.

4.  **Коррекция комментариев и документации:**
    *   Были обновлены и уточнены некоторые комментарии в коде для лучшего отражения логики работы (например, комментарий о начальной позиции пришельца в `alien.py`).
    *   Проведена ревизия строк документации (docstrings) в методах класса `AlienInvasion` для удаления неактуальной информации (например, аннотации `:return:`, где метод ничего не возвращает).
*   **Внедрение системы состояний игры (Game State Machine):** Реализована базовая система состояний, управляющая основными этапами: Главное меню (`STATE_MENU`), Игровой процесс (`STATE_PLAYING`) и Конец игры (`STATE_GAME_OVER`). Заложены структурные основы для состояния Паузы (`STATE_PAUSED`). Это улучшает управление потоком игры и служит фундаментом для новых UI-элементов.
*   **Реализация базового Главного меню:** Добавлено Главное меню с кнопками 'Новая игра' и 'Выход'. Игра теперь стартует в меню, которое также отображается после завершения игровой сессии. В рамках этой задачи было скорректировано позиционирование кнопок для их корректного отображения.

Эти изменения способствовали созданию более чистого, гибкого и устойчивого кода, что облегчает его понимание и дальнейшее развитие проекта.

## Ключевые исправления

*   **Исправление ошибки загрузки изображений:** Устранена ошибка `FileNotFoundError`, которая могла возникать при запуске игры из директории, отличной от корневой. Пути к графическим ресурсам теперь формируются как абсолютные, обеспечивая стабильный запуск.

## Как запустить игру на локальном компьютере

Следуйте этим инструкциям, чтобы загрузить, установить зависимости и запустить игру "Alien Invasion" на вашем компьютере.

### 1. Клонирование репозитория

Сначала необходимо клонировать репозиторий с игрой на ваш локальный компьютер. Откройте терминал или командную строку и выполните следующую команду:

```bash
git clone YOUR_REPOSITORY_URL
```
**Примечание:** Замените `YOUR_REPOSITORY_URL` на актуальный URL-адрес репозитория.

После выполнения команды перейдите в созданную директорию:
```bash
cd имя_папки_репозитория
```

### 2. Установка зависимостей

Для работы игры необходим Python 3 и библиотека Pygame.

*   **Убедитесь, что у вас установлен Python 3.** Вы можете скачать его с официального сайта [python.org](https://www.python.org/).

*   **Установите Pygame:**
    В корневой директории проекта находится файл `requirements.txt`, который содержит список необходимых библиотек (в данном случае, только Pygame). Для установки выполните команду:

    ```bash
    pip install -r requirements.txt
    ```
    **Примечание:** Если у вас несколько версий Python, или `pip` не указывает на установку для Python 3, вам может потребоваться использовать `pip3 install -r requirements.txt` или `python3 -m pip install -r requirements.txt`.

### 3. Запуск игры

После установки зависимостей вы готовы к запуску игры. Убедитесь, что вы находитесь в корневой директории проекта (той, где лежит файл `alien_invasion.py`).

Для запуска игры выполните следующую команду в терминале:

```bash
python alien_invasion.py
```
**Примечание:** На некоторых системах, особенно если у вас установлено несколько версий Python, может потребоваться явно указать `python3`:
```bash
python3 alien_invasion.py
```

После этого должно открыться окно с игрой "Alien Invasion". Приятной игры!
